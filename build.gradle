group 'org.example'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.10'
    ext.html_version = '0.6.8'
    ext.coroutines_version = '0.21'
    repositories {
        mavenCentral()
        jcenter()
        // maven { url "http://kotlin.bintray.com/kotlinx" }
        // maven { url "http://kotlin.bintray.com/kotlin-dev" }

    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin2js'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-html-js:$html_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$coroutines_version"
}

task copyWebFiles(type: Copy) {
    from 'src/main/web'
    into 'web'
}

// Taken from tutorial for Kotlin http://kotlinlang.org/docs/tutorials/javascript/getting-started-gradle/getting-started-with-gradle.html
task assembleWeb(type: Sync) {
    configurations.compile.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || 
                    !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "${projectDir}/web/js/lib"

    dependsOn classes
}

assemble.dependsOn assembleWeb
assemble.dependsOn copyWebFiles

compileKotlin2Js {
    kotlinOptions {
        outputFile = "${projectDir}/web/js/life.js"
        sourceMap = true
        sourceMapEmbedSources = "always"
    }
}

task cleanWeb(type: Delete) {
  delete 'web'
  followSymlinks = true
}

clean.dependsOn cleanWeb
